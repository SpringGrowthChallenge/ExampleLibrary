## Forma de configurar el gateway en .properties
spring.cloud.gateway.routes[0].id=msvc-libreros
spring.cloud.gateway.routes[0].uri=lb://msvc-libreros
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/libreros/**
spring.cloud.gateway.routes[0].predicates[1]=Header=nombre, Valor
spring.cloud.gateway.routes[0].predicates[2]=Method=GET, POST
spring.cloud.gateway.routes[0].predicates[3]=Query=nombre
spring.cloud.gateway.routes[0].predicates[4]=Cookie=nombre,valor
spring.cloud.gateway.routes[0].predicates[5]=Header=Content-Type, application/json
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=2
spring.cloud.gateway.routes[0].filters[1].name=SampleCookie
spring.cloud.gateway.routes[0].filters[1].args.message=Muerte a Gege
spring.cloud.gateway.routes[0].filters[1].args.name=Gege
spring.cloud.gateway.routes[0].filters[1].args.value=Muerte

spring.cloud.gateway.routes[1].id=msvc-items
spring.cloud.gateway.routes[1].uri=lb://msvc-libros
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/libros/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=2
spring.cloud.gateway.routes[1].filters[1]=AddRequestHeader=nombreAtributo, valor
spring.cloud.gateway.routes[1].filters[2]=AddResponseHeader=nombreAtributoHeader, valor
spring.cloud.gateway.routes[1].filters[3]=AddRequestParameter=nombreAtributoParametro, valor
spring.cloud.gateway.routes[1].filters[4]=SetResponseHeader=Content-Type, text/plain

spring.datasource.url=jdbc:h2:mem:maindb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.sql.init.platform=h2

# Configuraci�n para inicializar y destruir la base de datos al iniciar y terminar la aplicaci�n
spring.sql.init.mode=always

#Configuracion de tipo de aplicacion
spring.main.web-application-type=reactive